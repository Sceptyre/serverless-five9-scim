service: serverless-five9-scim
frameworkVersion: '3'

custom:
  USERS_TABLE: '${self:service}-${sls:stage}-users'

provider:
  name: aws
  deploymentMethod: direct
  runtime: nodejs14.x
  stage: ${env:STAGE, 'dev'}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ usersTable, Arn ]
  environment:
    USERS_TABLE: ${self:custom.USERS_TABLE}

resources:
      Resources:
        usersTable:
          Type: AWS::DynamoDB::Table
          Properties:
            TableName: ${self:custom.USERS_TABLE}
            AttributeDefinitions:
              - AttributeName: id
                AttributeType: N
            KeySchema:              
              - AttributeName: id
                KeyType: HASH
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1

functions:
  user:
    timeout: 25
    memorySize: 128
    handler: api/app.handler
    events:
      - httpApi:
          path: '/scimv2/Users/{id}'
          method: 'ANY'

  users:
    timeout: 25
    memorySize: 128
    handler: api/app.handler
    events:
      - httpApi: 
          path: '/scimv2/Users'
          method: 'ANY'

  sync:
    timeout: 120
    handler: api/sync.handler
    events:
      - schedule:
          rate: rate(1 day)

plugins:
  - serverless-offline
  - serverless-dotenv-plugin